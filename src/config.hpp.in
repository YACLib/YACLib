#pragma once

#include <cstddef>

// other sanitizers don't really need this
#if defined(__has_feature)
#  if __has_feature(address_sanitizer)
#    define YACLIB_ASAN
#  elif __has_feature(thread_sanitizer)
#    define YACLIB_TSAN
#  elif __has_feature(memory_sanitizer)
#    define YACLIB_MEMSAN
#  endif
#endif

#if defined(__SANITIZE_ADDRESS__)
#  define YACLIB_ASAN
#elif defined(__SANITIZE_THREAD__)
#  define YACLIB_TSAN
#endif

// Maybe we should increase some of this
#ifndef YACLIB_SLOWDOWN
#  if defined(YACLIB_ASAN)
#    define YACLIB_SLOWDOWN 2
#  elif defined(YACLIB_TSAN)
#    define YACLIB_SLOWDOWN 2
#  elif defined(YACLIB_MEMSAN)
#    define YACLIB_SLOWDOWN 1
#  else
#    define YACLIB_SLOWDOWN 1
#  endif
#endif

#ifndef YACLIB_MEMORY_OVERHEAD
#  if defined(YACLIB_ASAN)
#    define YACLIB_MEMORY_OVERHEAD 3
#  elif defined(YACLIB_TSAN)
#    define YACLIB_MEMORY_OVERHEAD 3
#  elif defined(YACLIB_MEMSAN)
#    define YACLIB_MEMORY_OVERHEAD 1
#  else
#    define YACLIB_MEMORY_OVERHEAD 1
#  endif
#endif

#ifndef YACLIB_CI_SLOWDOWN
#  define YACLIB_CI_SLOWDOWN 1
#endif

namespace yaclib {

constexpr size_t kCacheLineSize = 64;

}  // namespace yaclib
