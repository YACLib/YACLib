#!/usr/bin/env python

import subprocess

def last_line_empty(filename):
    # Add a linebreak to the file if it doesn't have one
    with open(f'./{file}', 'r') as f:
        try:
            last_char = f.readlines()[-1][-1]
            return last_char == '\n'
        except IndexError:
            return False

git_diff = subprocess.Popen('git diff-index --name-status --cached HEAD'.split(), stdout=subprocess.PIPE)
remove_deleted = subprocess.Popen('grep -v ^D'.split(), stdin=git_diff.stdout, stdout=subprocess.PIPE)
get_second_column = subprocess.Popen(['awk', '{ print $2 }'], stdin=remove_deleted.stdout, stdout=subprocess.PIPE)
git_diff.stdout.close()
remove_deleted.stdout.close()
output = get_second_column.communicate()[0].decode('utf-8').strip()
if not output:
    exit(0)
for file in output.split('\n'):
    # Add a linebreak to the file if it doesn't have one
    if not last_line_empty(f'./{file}'):
        with open(f'./{file}', 'a') as f:
            print(f'Add linebreak to the file: {file}')
            f.write('\n')
    # clang-format fix
    if file.endswith('.cpp') or file.endswith('.hpp') or file.endswith('.c') or file.endswith('.h'):
        print(f'clang-format fix: {file}')
        subprocess.Popen(['clang-format', f'./{file}', '-i'], stdout=subprocess.DEVNULL).communicate()

subprocess.Popen(['git', 'add'] + output.split('\n')).communicate()
