<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 9.0.0 (20230911.1827)
 -->
<!-- Title: yaclib::when::All&lt; FailPolicy::FirstFail, OutputValue, OutputError, InputCore &gt; Pages: 1 -->
<svg width="286pt" height="139pt"
 viewBox="0.00 0.00 286.38 138.75" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 134.75)">
<title>yaclib::when::All&lt; FailPolicy::FirstFail, OutputValue, OutputError, InputCore &gt;</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title=" ">
<polygon fill="#999999" stroke="#666666" points="202.88,-53 72.88,-53 72.88,0 202.88,0 202.88,-53"/>
<text text-anchor="start" x="80.88" y="-39.5" font-family="Helvetica,sans-Serif" font-size="10.00">yaclib::when::All&lt;</text>
<text text-anchor="start" x="80.88" y="-28.25" font-family="Helvetica,sans-Serif" font-size="10.00"> FailPolicy::FirstFail,</text>
<text text-anchor="start" x="80.88" y="-17" font-family="Helvetica,sans-Serif" font-size="10.00"> OutputValue, OutputError,</text>
<text text-anchor="middle" x="137.88" y="-5.75" font-family="Helvetica,sans-Serif" font-size="10.00"> InputCore &gt;</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="Node000002" class="node">
<title>Node2</title>
<g id="a_Node000002"><a xlink:title=" ">
<polygon fill="white" stroke="#666666" points="127.75,-130.75 0,-130.75 0,-100.25 127.75,-100.25 127.75,-130.75"/>
<text text-anchor="start" x="8" y="-117.25" font-family="Helvetica,sans-Serif" font-size="10.00">static constexpr Consume</text>
<text text-anchor="middle" x="63.88" y="-106" font-family="Helvetica,sans-Serif" font-size="10.00">Policy</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1_Node000001_Node000002" class="edge">
<title>Node2&#45;&gt;Node1</title>
<g id="a_edge1_Node000001_Node000002"><a xlink:title=" ">
<path fill="none" stroke="#9a32cd" stroke-dasharray="5,2" d="M83.51,-91.41C93.44,-79.74 105.52,-65.54 115.76,-53.5"/>
<polygon fill="#9a32cd" stroke="#9a32cd" points="80.89,-89.1 77.08,-98.98 86.22,-93.63 80.89,-89.1"/>
</a>
</g>
<text text-anchor="middle" x="138.38" y="-72.75" font-family="Helvetica,sans-Serif" font-size="10.00" fill="grey"> kConsumePolicy</text>
</g>
<!-- Node3 -->
<g id="Node000003" class="node">
<title>Node3</title>
<g id="a_Node000003"><a xlink:title=" ">
<polygon fill="white" stroke="#666666" points="278.38,-125.12 145.38,-125.12 145.38,-105.88 278.38,-105.88 278.38,-125.12"/>
<text text-anchor="middle" x="211.88" y="-111.62" font-family="Helvetica,sans-Serif" font-size="10.00">static constexpr CorePolicy</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node1 -->
<g id="edge2_Node000001_Node000003" class="edge">
<title>Node3&#45;&gt;Node1</title>
<g id="a_edge2_Node000001_Node000003"><a xlink:title=" ">
<path fill="none" stroke="#9a32cd" stroke-dasharray="5,2" d="M199.4,-96.42C193.68,-88.44 186.68,-79.06 179.88,-71 174.86,-65.06 169.24,-58.92 163.78,-53.2"/>
<polygon fill="#9a32cd" stroke="#9a32cd" points="196.35,-98.17 204.96,-104.33 202.07,-94.14 196.35,-98.17"/>
</a>
</g>
<text text-anchor="middle" x="214.88" y="-72.75" font-family="Helvetica,sans-Serif" font-size="10.00" fill="grey"> kCorePolicy</text>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
