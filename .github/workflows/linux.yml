name: Linux

on:
  push:
    branches: [ main ]
    paths-ignore: [ 'doc/**', '**.md' ]
  pull_request:
    branches: [ main ]
    types: [ assigned ]
    paths-ignore: [ 'doc/**', '**.md' ]
  schedule:
    - cron: '0 * * * *'

jobs:
  # TODO(MBkkt) Add clang-5.0, clang-6.0, clang-7
  #             Fucking cppreference liars, clang don't support simple variant usage, before clang-8!
  #             We can only support this when we remove the variant from the Result
  # TODO(MBkkt) Add gcc-12 when it release
  # TODO(MBkkt) Add other compilers, like Intel C++?

  main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        compilers: [ 'clang-8 clang++-8 clang-9 clang++-9 clang-10 clang++-10 clang-11 clang++-11 clang-12 clang++-12 clang-13 clang++-13 clang-14 clang++-14',
                     'gcc-7 g++-7 gcc-8 g++-8 gcc-9 g++-9 gcc-10 g++-10 gcc-11 g++-11' ]
        build_type: [ Debug, RelWithDebInfo ]

    steps:
      - uses: actions/checkout@v2

      - name: Update dependencies
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install ninja-build lld
          sudo ln -sf /usr/local/bin/ld /usr/bin/lld

      - name: Install dependencies clang
        if: ${{ matrix.compilers != 'gcc-7 g++-7 gcc-8 g++-8 gcc-9 g++-9 gcc-10 g++-10 gcc-11 g++-11' }}
        run: |
          sudo apt-get install clang-8
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo     ./llvm.sh 9  shit
          sudo     ./llvm.sh 10 shit
          sudo     ./llvm.sh 11 shit
          sudo     ./llvm.sh 12 shit
          sudo     ./llvm.sh 13 shit
          sudo     ./llvm.sh 14 shit
          rm       ./llvm.sh

      - name: Install dependencies gcc
        if: ${{ matrix.compilers == 'gcc-7 g++-7 gcc-8 g++-8 gcc-9 g++-9 gcc-10 g++-10 gcc-11 g++-11' }}
        run: |
          sudo apt-get install ${{ matrix.compilers }}

      - name: Configure CMake
        run: |
          cmake --version
          compilers=(${{ matrix.compilers }})
          for (( i=0; i<${#compilers[*]}; i+=2 )); do
            dir="build_${compilers[$i]}"; echo $dir
            cmake -S . -B $dir                            \
              -G "Ninja"                                  \
              -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
              -DCMAKE_C_COMPILER=${compilers[$i]}         \
              -DCMAKE_CXX_COMPILER=${compilers[$i + 1]}   \
              -DYACLIB_BUILD_TESTING=ON                   \
              -DYACLIB_BUILD_EXAMPLES=ON                  \
              -DYACLIB_CXX_STANDARD=17
            echo
          done

      - name: Build
        run: |
          compilers=(${{ matrix.compilers }})
          for (( i=0; i<${#compilers[*]}; i+=2 )); do
            dir="build_${compilers[$i]}"; echo $dir
            ninja -C $dir
            echo
          done

      - name: Test
        run: |
          compilers=(${{ matrix.compilers }})
          for (( i=0; i<${#compilers[*]}; i+=2 )); do
            dir="build_${compilers[$i]}"; echo $dir; cd $dir
            ctest --output-on-failure -C ${{ matrix.build_type }} -VV
            cd ..; echo
          done
