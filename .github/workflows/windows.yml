name: Windows

on:
  push:
    branches: [ main ]
    paths: [ '**.cpp', '**.hpp*', '**.cmake', 'include/yaclib_std/*', '**/CMakeLists.txt' ]
  pull_request:
    branches: [ main ]
    paths: [ '**.cpp', '**.hpp*', '**.cmake', 'include/yaclib_std/*', '**/CMakeLists.txt' ]
  schedule:
    - cron: '0 12 * * 1-5'

jobs:
  main:
    runs-on: 'windows-${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        arch: [ Win32, x64 ]
        os: [ 2019, 2022 ]
        build_type: [ Debug, RelWithDebInfo ]
        isPR:
          - ${{ github.event_name == 'pull_request' }}
        exclude:
          - isPR: true
            arch: Win32
            os: 2022
            build_type: Debug
          - isPR: true
            arch: Win32
            os: 2022
            build_type: RelWithDebInfo
          - isPR: true
            arch: x64
            os: 2022
            build_type: Debug
          - isPR: true
            arch: x64
            os: 2022
            build_type: RelWithDebInfo

    steps:
      - uses: actions/checkout@v3

      # TODO(MBkkt) https://github.com/msys2/setup-msys2?
      # TODO(MBkkt) Run tests with MinGW
      # - name: Set up MinGW x86
      #   if: ${{ matrix.arch == 'Win32' }}
      #   uses: egor-tensin/setup-mingw@v2
      #   with:
      #     platform: x86
      #
      # - name: Set up MinGW x64
      #   if: ${{ matrix.arch == 'x64' }}
      #   uses: egor-tensin/setup-mingw@v2
      #   with:
      #     platform: x64

      - name: Configure CMake
        shell: bash
        run: |
          if [[ ${{ matrix.os }} == "2022" ]]; then
            msvc="17 2022"
          else
            msvc="16 2019"
          fi
          arch=${{ matrix.arch }}
          if [[ "$arch" == "Win32" ]]; then
            slowdown=5
          else
            slowdown=1
          fi
          names=(MSVC ClangCL)  # TODO MinGW
          generators=("Visual Studio $msvc" "Visual Studio $msvc" "MinGW Makefiles")
          options=("-A $arch" "-A $arch -T ClangCL" "-DCMAKE_BUILD_TYPE=${{ matrix.build_type }}")

          for (( i=0; i<${#names[*]}; i+=1 )); do
            if [[ "${names[$i]}" == "MSVC" ]]; then
              coroutine_option="CORO"
            else
              coroutine_option=""
            fi
            dir="build_${names[$i]}"
            echo $dir

            cmake -S . -B $dir                                                                                         \
              -DYACLIB_CXX_STANDARD=17                                                                                 \
              -DYACLIB_FLAGS="$coroutine_option"                                                                       \
              -DYACLIB_TEST=SINGLE                                                                                     \
              -DYACLIB_LOG="ERROR;DEBUG"                                                                               \
              -G"${generators[$i]}"                                                                                    \
              ${options[$i]}                                                                                           \
              -DYACLIB_DEFINITIONS="YACLIB_CI_SLOWDOWN=$slowdown"
          done

      - name: Build
        shell: bash
        run: |
          for dir in build*/; do
            echo $dir
            cmake --build $dir --config ${{ matrix.build_type }} --parallel
            echo
          done

      - name: Test
        shell: bash
        run: |
          for dir in build*/; do
            cd $dir
            ctest --output-on-failure -C ${{ matrix.build_type }} -V
            cd ..
          done
